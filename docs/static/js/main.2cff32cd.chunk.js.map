{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","console","log","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","href","rel","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,OACvCN,EAAc,OAMd,2BAAOO,YAAY,YAAYC,KAAK,OAAOC,MAAOV,EAAYW,SAfxC,SAACR,GACzBF,EAAcE,EAAES,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,8DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAERC,QAAQC,IAAIF,GACNG,EAAOH,EAAKI,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXZ,IAAG,UAAEU,EAAIG,cAAN,aAAE,EAAYC,iBAAiBd,QAVjB,kBAadQ,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IACnC,OACE,oCACE,yBAAKgB,UAAU,oDACb,yBAAKC,IAAKjB,EAAKgB,UAAU,eAAeE,IAAI,QAC5C,yBAAKF,UAAU,gBACb,wBAAIA,UAAU,cAAcJ,IAE9B,uBAAGI,UAAU,kBAAkBG,KAAMnB,EAAKJ,OAAO,SAASwB,IAAI,uBAA9D,UCLKC,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNiB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACR5B,EAAQC,GAAU4B,MAAK,SAACC,GACtBH,EAAS,CACPnB,KAAMsB,EACNL,SAAS,SAGZ,CAACxB,IAEGyB,EDZ2BK,CAAa9B,GAAjCe,EADyB,EAC/BR,KAAciB,EADiB,EACjBA,QAEtB,OACE,oCACE,wBAAIN,UAAU,yDACXlB,GAEFwB,GAAW,uBAAGN,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAamB,IAAKnB,EAAIC,IAAQD,UEZ3BoB,EAAgB,WAAO,IAAD,EACG/C,mBAAS,CAAC,YADb,mBAC1BgD,EAD0B,KACdjD,EADc,KAGjC,OACE,oCACE,wBAAIkC,UAAU,mBAAd,cACA,kBAAC,EAAD,CAAalC,cAAeA,IAC5B,4BACGiD,EAAWtB,KAAI,SAACX,GAAD,OACd,kBAAC,EAAD,CAAS+B,IAAK/B,EAAUA,SAAUA,UCP5CkC,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.2cff32cd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((cats) => [inputValue,...cats]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input placeholder=\"Search...\" type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=8&api_key=HBuNeD6hnkIajNZzHVmlILjH47VDtT25`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  console.log(data)\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <>\n      <div className=\"card mt-4 animate__animated animate__fadeInUpBig\">\n        <img src={url} className=\"card-img-top\" alt=\"...\" />\n        <div className=\"card-body ar\">\n          <h5 className=\"card-title\">{title}</h5>\n        </div>\n        <a className=\"btn btn-primary\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">Ver</a>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n// import { getGifs } from \"../helpers/getGifs\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn color-category mt-4\">\n        {category}\n      </h3>\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GiftExpertApp = () => {\n  const [categories, setCategories] = useState([\"Welcome\"]);\n\n  return (\n    <>\n      <h2 className=\"title glow mb-5\">Gifs Hooks</h2>\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport {GiftExpertApp} from \"./GiftExpertApp.js\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}